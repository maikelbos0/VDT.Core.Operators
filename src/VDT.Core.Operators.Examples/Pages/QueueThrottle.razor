@page "/QueueThrottle"

<h1>QueueThrottle</h1>

<p>
    QueueThrottle is an operator that pauses at least the specified delay in between publishing values, queueing received values.
</p>

<div class="row">
    <div class="col-12 col-md-6 col-xl-4 mb-3">
        <label for="value" class="form-label">Value</label>
        <input type="text" class="form-control" id="value" @bind-value="@Value" />
    </div>

    <div class="col-12 col-md-6 col-xl-4 mb-3">
        <label for="delayInMilliseconds" class="form-label">Delay in milliseconds</label>
        <input type="text" class="form-control" id="delayInMilliseconds" @bind-value="@DelayInMilliseconds" />
    </div>

    <div class="col-12 col-md-6 col-xl-4 mb-3 align-self-end">
        <button class="btn btn-primary w-100" @onclick="async () => await valueStream.Publish(Value)">Publish</button>
    </div>
</div>

<Subscriber TValue="string" @ref="subscriber" />

@code {
    private readonly IOperandStream<string> valueStream = new OperandStream<string>();
    private Subscriber<string> subscriber = null!;

    private string Value { get; set; } = "Value";
    private int DelayInMilliseconds { get; set; } = 1000;

    protected override void OnAfterRender(bool firstRender) {
        if (firstRender) {
            valueStream.QueueThrottle(() => DelayInMilliseconds).Subscribe(subscriber.Subscribe);
        }
    }
}
